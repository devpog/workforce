full_df <- left_join(all_resources, full_names)
full_df[is.na(full_df), ] <- "None"
full_df[is.na(full_df) ] <- "None"
full_df
df <- left_join(all_resources, full_names)
df[is.na(df) ] <- "None"
df
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
ifelse(" ", 1, 2)
?ifelse
shiny::runApp()
shiny::runApp()
shiny::runApp()
load('tmp.RData')
tmp
type0f()
typeof(tmp)
length(tmp)
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
db_get_active_projects <- function(host, port = 9160, keyspace){
drv <- JDBC(db_drv, jars)
conn <- dbConnect(drv, paste0("jdbc:cassandra://localhost:9160/", keyspace))
query <- paste0("select * from project where active = true")
df <- as.data.frame(dbGetQuery(conn, query))
dbDisconnect(conn)
return(df)
}
shiny::runApp()
shiny::runApp()
db_get_project_details <- function(host, port = 9160, keyspace, client, phase){
drv <- JDBC(db_drv, jars)
conn <- dbConnect(drv, paste0("jdbc:cassandra://localhost:9160/", keyspace))
query <- paste0("select * from role_project where client =\'", client, "\' and phase = \'", phase, "\'")
role_project <- as.data.frame(dbGetQuery(conn, query))
query <- paste0("select * from dedication_project where client =\'", client, "\' and phase = \'", phase, "\'")
dedication_project <- as.data.frame(dbGetQuery(conn, query))
query <- paste0("select * from resource_project where client =\'", client, "\' and phase = \'", phase, "\'")
resource_project <- as.data.frame(dbGetQuery(conn, query))
query <- paste0("select * from name_resource")
name_resource <- as.data.frame(dbGetQuery(conn, query))
dbDisconnect(conn)
name_resource <- left_join(resource_project, name_resource)
print(name_resource)
}
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
?left_join()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
?str_split
s1 <- "K p"
str_split(s1, " ")
unlist(str_split(s1, " "))
shiny::runApp()
shiny::runApp()
length(unique(unlist(str_split(paste(first_name, last_name), " "))))
first_name = "Kyrylo"
last_name = "Pogrebenko"
length(unique(unlist(str_split(paste(first_name, last_name), " "))))
length(unique(unlist(str_split(paste("None", "None"), " "))))
unique(unlist(str_split(paste("None", "None"), " ")))
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
unique(unlist(str_split(paste(first_name, last_name), " ")))
length(unique(unlist(str_split(paste(first_name, last_name), " "))))
shiny::runApp()
shiny::runApp()
shiny::runApp()
?as.Date
shiny::runApp()
d1 <- "Sun May 01 00:00:00 EDT 2016"
as.Date(d1)
as.Date(d1, format = "%Y-%m-%d")
as.POSIXct.date(d1)
strptime(d1)
strptime(d1, format = "%w")
strptime(d1, format = "%a")
strptime(d1, format = "%a %b")
strptime(d1, format = "%a")
as.Date(strptime(d1, format = "%a"))
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
db_get_project_details <- function(host, port = 9160, keyspace, client, phase){
drv <- JDBC(db_drv, jars)
conn <- dbConnect(drv, paste0("jdbc:cassandra://localhost:9160/", keyspace))
query <- paste0("select * from project where client =\'", client, "\' and phase = \'", phase, "\'")
project <- as.data.frame(dbGetQuery(conn, query))
query <- paste0("select * from hub_client")
hub_client <- as.data.frame(dbGetQuery(conn, query))
query <- paste0("select * from role_project where client =\'", client, "\' and phase = \'", phase, "\'")
role_project <- as.data.frame(dbGetQuery(conn, query))
query <- paste0("select * from dedication_project where client =\'", client, "\' and phase = \'", phase, "\'")
dedication_project <- as.data.frame(dbGetQuery(conn, query))
query <- paste0("select * from resource_project where client =\'", client, "\' and phase = \'", phase, "\'")
resource_project <- as.data.frame(dbGetQuery(conn, query))
query <- paste0("select * from name_resource")
name_resource <- as.data.frame(dbGetQuery(conn, query))
query <- paste0("select * from hub_resource")
hub_resource <- as.data.frame(dbGetQuery(conn, query))
dbDisconnect(conn)
df <- join(resource_project, hub_client)
df <- left_join(df, name_resource, "system_name")
df[is.na(df)] <- "None"
df <- left_join(df, hub_resource, "system_name") %>%
transmute(hub = ifelse(is.na(hub.y), hub.x, hub.y), client, role, system_name, last_name, first_name)
df <- left_join(df, dedication_project, "role") %>%
transmute(hub, client = client.x, phase, role, system_name, first_name, last_name, dedication)
df <- left_join(df, project, "client") %>%
transmute(hub, client, phase = phase.x,
start_date = as.Date(strptime(start_date, format = "%a")),
end_date = as.Date(strptime(end_date, format = "%a")), role,
full_name = paste(first_name, last_name), dedication)
return(df)
}
db_get_project_details(db_host, db_port, db_keyspace, 'NTT', 'Won')
db_get_project_details(db_host, db_port, db_keyspace, 'Accenture', 'Won')
db_get_project_details(db_host, db_port, db_keyspace, 'AllState', 'Scoped')
db_get_project_details(db_host, db_port, db_keyspace, 'Barclays', 'Scoped')
shiny::runApp()
shiny::runApp()
load('df.RData')
df
lapply(df, print)
unlist(df)
df
Reduce(df, df1)
Reduce(df)
do.call(df, rbind)
do.call(rbind, df)
shiny::runApp()
load('df.RData')
do.call(rbind, df)
shiny::runApp()
shiny::runApp()
load('df.RData')
df
do.call(rbind, df)
shiny::runApp()
load('df.RData')
df
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
subject_ID <- 1:5
SexAge_Race <- c("MALE41.2_White", "FEMALE36.5_Black", "MALE34.8_Hispanic", "FEMALE23.7_White", "FEMALE35.6_Hispanic")
df <- data.frame(subject_ID = subject_ID, SexAge_Race = SexAge_Race)
df
with(df, str_split(SexAge_Race, "_"))
do.call(rbind, (with(df, str_split(SexAge_Race, "_")))
)
as.data.frame(do.call(rbind, (with(df, str_split(SexAge_Race, "_"))))
)
data.frame(do.call(rbind, (with(df, str_split(SexAge_Race, "_")))))
df <- cbind(df$subject_ID, as.data.frame(do.call(rbind, (with(df, str_split(SexAge_Race, "_"))))))
df
with(df, str_split(V1, "(MALE|FEMALE)"))
do.call(rbind, with(df, str_split(V1, "(MALE|FEMALE)")))
data.frame(age = do.call(rbind, with(df, str_split(V1, "(MALE|FEMALE)"))))
data.frame(do.call(rbind, with(df, str_split(V1, "(MALE|FEMALE)")))))
data.frame(do.call(rbind, with(df, str_split(V1, "(MALE|FEMALE)"))))
data.frame(do.call(rbind, with(df, str_split(V1, "(MALE|FEMALE)"))))[, "X2"]
data.frame(do.call(rbind, with(df, str_split(V1, "(\\d+\\.\\d+)"))))[, "X2"]
data.frame(do.call(rbind, with(df, str_split(V1, "(\\d+\.\\d+)"))))[, "X2"]
data.frame(do.call(rbind, with(df, str_split(V1, "\\d+"))))[, "X2"]
data.frame(do.call(rbind, with(df, str_split(V1, "(\\d+\.\\d+)"))))
data.frame(do.call(rbind, with(df, str_split(V1, "(\\d+\\.\\d+)"))))
gender <- data.frame(do.call(rbind, with(df, str_split(V1, "(\\d+\\.\\d+)"))))[, "X1"]
gender
# Replicate data frame or read from CSV (I replicated)
subject_ID <- 1:5
SexAge_Race <- c("MALE41.2_White", "FEMALE36.5_Black", "MALE34.8_Hispanic", "FEMALE23.7_White", "FEMALE35.6_Hispanic")
full_df <- data.frame(subject_ID = subject_ID, SexAge_Race = SexAge_Race)
# Split the last column into 2, SexAge and Race, separating
df <- cbind(full_df$subject_ID, as.data.frame(do.call(rbind, (with(full_df, str_split(SexAge_Race, "_"))))))
age <- data.frame(do.call(rbind, with(df, str_split(V1, "(MALE|FEMALE)"))))[, "X2"]
gender <- data.frame(do.call(rbind, with(df, str_split(V1, "(\\d+\\.\\d+)"))))[, "X1"]
subject_ID <- df[, "subjectID"]
new_df <- data.frame(
subject_ID = subject_ID,
age <- age
gender <- gender
)
new_df <- data.frame(
subject_ID = subject_ID,
age <- age,
gender <- gender
)
new_df
subject_id <- df[, "subjectID"]
subject_id <- full_df[, "subjectID"]
# Replicate data frame or read from CSV (I replicated)
subject_ID <- 1:5
SexAge_Race <- c("MALE41.2_White", "FEMALE36.5_Black", "MALE34.8_Hispanic", "FEMALE23.7_White", "FEMALE35.6_Hispanic")
full_df <- data.frame(subject_ID = s
..
# Replicate data frame or read from CSV (I replicated)
subject_ID <- 1:5
SexAge_Race <- c("MALE41.2_White", "FEMALE36.5_Black", "MALE34.8_Hispanic", "FEMALE23.7_White", "FEMALE35.6_Hispanic")
full_df <- data.frame(subject_ID = subject_ID, SexAge_Race = SexAge_Race)
full_df
df$V2
# Replicate data frame or read from CSV (I replicated)
subject_ID <- 1:5
SexAge_Race <- c("MALE41.2_White", "FEMALE36.5_Black", "MALE34.8_Hispanic", "FEMALE23.7_White", "FEMALE35.6_Hispanic")
full_df <- data.frame(subject_ID = subject_ID, SexAge_Race = SexAge_Race)
# Split the last column into 2, SexAge and Race, separating
df <- cbind(full_df$subject_ID, as.data.frame(do.call(rbind, (with(full_df, str_split(SexAge_Race, "_"))))))
age <- data.frame(do.call(rbind, with(df, str_split(V1, "(MALE|FEMALE)"))))[, "X2"]
gender <- data.frame(do.call(rbind, with(df, str_split(V1, "(\\d+\\.\\d+)"))))[, "X1"]
subject_id <- full_df[, "subject_ID"]
new_df <- data.frame(
subject_ID <- subject_ID,
age <- age,
gender <- gender
race = df$V2
)
new_df <- data.frame(
subject_ID <- subject_ID,
age <- age,
gender <- gender,
race = df$V2
)
new_df
age <- data.frame(do.call(rbind, with(df, str_split(V1, "(MALE|FEMALE)"))))[, "X2"]
age
age <- as.numeric(data.frame(do.call(rbind, with(df, str_split(V1, "(MALE|FEMALE)"))))[, "X2"])
age
gender <- data.frame(do.call(rbind, with(df, str_split(V1, "(\\d+\\.\\d+)"))))[, "X1"]
gender
subject_id <- full_df[, "subject_ID"]
subject_id
new_df <- data.frame(
subject_ID = subject_ID,
age = age,
gender = gender,
race = df$V2
)
new_df
# Replicate data frame or read from CSV (I replicated)
subject_ID <- 1:5
SexAge_Race <- c("MALE41.2_White", "FEMALE36.5_Black", "MALE34.8_Hispanic", "FEMALE23.7_White", "FEMALE35.6_Hispanic")
full_df <- data.frame(subject_ID = subject_ID, SexAge_Race = SexAge_Race)
# Split the last column into 2, SexAge and Race, separating
df <- cbind(full_df$subject_ID, as.data.frame(do.call(rbind, (with(full_df, str_split(SexAge_Race, "_"))))))
age <- as.numeric(data.frame(do.call(rbind, with(df, str_split(V1, "(MALE|FEMALE)"))))[, "X2"])
gender <- data.frame(do.call(rbind, with(df, str_split(V1, "(\\d+\\.\\d+)"))))[, "X1"]
subject_id <- full_df[, "subject_ID"]
# Combine into a new resulting data frame
new_df <- data.frame(
subject_ID = subject_ID,
age = age,
gender = gender,
race = df$V2
)
new_df
data.frame(do.call(rbind, with(df, str_split(V1, "(MALE|FEMALE)"))))
# Replicate data frame or read from CSV (I replicated)
subject_ID <- 1:5
SexAge_Race <- c("MALE41.2_White", "FEMALE36.5_Black", "MALE34_Hispanic", "FEMALE23.7_White", "FEMALE35.6_Hispanic")
full_df <- data.frame(subject_ID = subject_ID, SexAge_Race = SexAge_Race)
# Split the last column into 2, SexAge and Race, separating
df <- cbind(full_df$subject_ID, as.data.frame(do.call(rbind, (with(full_df, str_split(SexAge_Race, "_"))))))
age <- as.numeric(data.frame(do.call(rbind, with(df, str_split(V1, "(MALE|FEMALE)"))))[, "X2"])
gender <- data.frame(do.call(rbind, with(df, str_split(V1, "(\\d+\\.\\d+)|(\\d+)"))))[, "X1"]
subject_id <- full_df$subject_ID
# Combine into a new resulting data frame
new_df <- data.frame(
subject_ID = subject_ID,
age = age,
gender = gender,
race = df$V2
)
new_df
load('df.RData')
df
gsub("(MALE|FEMALE)(.*)_(.*)", "\\1,\\2,\\3", full_df$SexAge_Race)
new_df <- data.frame()
rbind(new_df, gsub("(MALE|FEMALE)(.*)_(.*)", "\\1,\\2,\\3", full_df$SexAge_Race))
rbind(new_df, str_split(gsub("(MALE|FEMALE)(.*)_(.*)", "\\1,\\2,\\3", full_df$SexAge_Race)), ",")
rbind(new_df, str_split(gsub("(MALE|FEMALE)(.*)_(.*)", "\\1,\\2,\\3", full_df$SexAge_Race), ","))
new_df <- data.frame()
cbind(new_df, str_split(gsub("(MALE|FEMALE)(.*)_(.*)", "\\1,\\2,\\3", full_df$SexAge_Race), ","))
new_df <- data.frame()
rbind(new_df, str_split(gsub("(MALE|FEMALE)(.*)_(.*)", "\\1,\\2,\\3", full_df$SexAge_Race), ","))r
new_df <- data.frame()
rbind(new_df, str_split(gsub("(MALE|FEMALE)(.*)_(.*)", "\\1,\\2,\\3", full_df$SexAge_Race), ","))
df
split(df, unique(df$client))
df
require(DT)
datatable(df)
datatable(df, extensions = c("ColReorder"))
require(DT)
datatable(df, extensions = 'Buttons')
datatable(df, extensions = 'AutoFill')
datatable(df, extensions = 'AutoFill', options = list(autoFill = TRUE))
datatable(df, extensions = 'Buttons')
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
?as.data.frame
shiny::runApp()
shiny::runApp()
shiny::runApp('~/shiny-server/workforce')
shiny::runApp('~/shiny-server/workforce')
load('df.RData')
df
names(df) %in% c("system_name")
shiny::runApp('~/shiny-server/workforce')
load('df.RData')
df
shiny::runApp('~/shiny-server/workforce')
shiny::runApp('~/shiny-server/workforce')
shiny::runApp('~/shiny-server/workforce')
shiny::runApp('~/shiny-server/workforce')
shiny::runApp('~/shiny-server/workforce')
shiny::runApp('~/shiny-server/workforce')
shiny::runApp('~/shiny-server/workforce')
shiny::runApp()
shiny::runApp()
shiny::runApp()
s1 <- c("hub_client", "client", "phase", "start_date", "end_date", "active", "completed", "role", "hub_resource", "full_name", "dedication")
s1
gsub("_", " ", s1)
capitalize(gsub("_", " ", s1))
gsub("(^|[[:space:]])([[:alpha:]])", "\\1\\U\\2", s1, perl=TRUE)
gsub("_", " ", gsub("(^|[[:space:]])([[:alpha:]])", "\\1\\U\\2", s1, perl=TRUE))
gsub("(^|[[:space:]])([[:alpha:]])", "\\1\\U\\2", gsub("_", " ", s1), perl=TRUE))
gsub("(^|[[:space:]])([[:alpha:]])", "\\1\\U\\2", gsub("_", " ", s1), perl=TRUE))
gsub("(^|[[:space:]])([[:alpha:]])", "\\1\\U\\2", gsub("_", " ", s1), perl=TRUE)
shiny::runApp()
df
df
load('df.RData')
df
df[, "full_name"]
gsub("(None)", "\\1", df[, "full_name"])
gsub("(^None)\\s+(None)$", "\\1", df[, "full_name"])
gsub("^(None)\\s+(None)$", "\\1", df[, "full_name"])
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
"Bienia, Christian" == 'None'
"Bienia, Christian" == "None"
"Bienia, Christian" != "None"
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
"Anton Akulov" == "Akulov Anton"
shiny::runApp()
"Anton Akulov" == "Anton Akulov"
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
global_roles <- c("Partnerships Lead", "Business Architect", "Technical Architect", "Project Lead", "Implementation Engineer", "Support Engineer")
shiny::runApp()
shiny::runApp()
load('all_roles.RData')
all_roles
global_roles
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
global_roles[1]
global_roles[2]
global_roles[3]
global_roles[4]
global_roles[5]
global_roles[6]
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
